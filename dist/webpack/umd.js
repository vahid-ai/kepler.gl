"use strict";

// Copyright (c) 2023 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
var resolve = require('path').resolve;

var join = require('path').join; // Import package.json to read version


var KeplerPackage = require("../package");

var SRC_DIR = resolve(__dirname, '../src');
var OUTPUT_DIR = resolve(__dirname, '../umd');

var LIBRARY_BUNDLE_CONFIG = function LIBRARY_BUNDLE_CONFIG(env) {
  return {
    entry: {
      KeplerGl: join(SRC_DIR, 'index.ts')
    },
    // Silence warnings about big bundles
    stats: {
      warnings: false
    },
    output: {
      // Generate the bundle in dist folder
      path: OUTPUT_DIR,
      filename: 'keplergl.min.js',
      globalObject: 'this',
      library: '[name]',
      libraryTarget: 'umd'
    },
    // let's put everything in
    externals: {
      react: {
        root: 'React',
        commonjs2: 'react',
        commonjs: 'react',
        amd: 'react',
        umd: 'react'
      },
      'react-dom': {
        root: 'ReactDOM',
        commonjs2: 'react-dom',
        commonjs: 'react-dom',
        amd: 'react-dom',
        umd: 'react-dom'
      },
      redux: {
        root: 'Redux',
        commonjs2: 'redux',
        commonjs: 'redux',
        amd: 'redux',
        umd: 'redux'
      },
      'react-redux': {
        root: 'ReactRedux',
        commonjs2: 'react-redux',
        commonjs: 'react-redux',
        amd: 'react-redux',
        umd: 'react-redux'
      },
      'styled-components': {
        commonjs: 'styled-components',
        commonjs2: 'styled-components',
        amd: 'styled-components',
        root: 'styled'
      }
    },
    resolve: {
      extensions: ['.tsx', '.ts', '.js'],
      modules: ['node_modules', SRC_DIR]
    },
    module: {
      rules: [{
        test: /\.(js|ts|tsx)$/,
        loader: 'babel-loader',
        include: [SRC_DIR],
        options: {
          plugins: [['search-and-replace', {
            rules: [{
              search: "3.0.0-alpha.0",
              replace: KeplerPackage.version
            }]
          }]]
        }
      }]
    },
    node: {
      fs: 'empty'
    }
  };
};

module.exports = function (env) {
  return LIBRARY_BUNDLE_CONFIG(env);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,