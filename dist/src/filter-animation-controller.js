"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _utils = require("@kepler.gl/utils");

var _constants = require("@kepler.gl/constants");

var _animationController = _interopRequireDefault(require("./common/animation-control/animation-controller"));

FilterAnimationControllerFactory.deps = [_animationController["default"]];

function FilterAnimationControllerFactory(AnimationController) {
  var FilterAnimationController = function FilterAnimationController(_ref) {
    var filter = _ref.filter,
        filterIdx = _ref.filterIdx,
        setFilterAnimationTime = _ref.setFilterAnimationTime,
        children = _ref.children;
    var intervalBins = (0, _react.useMemo)(function () {
      return (0, _utils.getIntervalBins)(filter);
    }, [filter]);
    var steps = (0, _react.useMemo)(function () {
      return intervalBins ? intervalBins.map(function (x) {
        return x.x0;
      }) : null;
    }, [intervalBins]);
    var updateAnimation = (0, _react.useCallback)(function (value) {
      switch (filter.animationWindow) {
        case _constants.ANIMATION_WINDOW.interval:
          var _idx = value[1];
          setFilterAnimationTime(filterIdx, 'value', [intervalBins[_idx].x0, intervalBins[_idx].x1 - 1]);
          break;

        default:
          setFilterAnimationTime(filterIdx, 'value', value);
          break;
      }
    }, [filterIdx, intervalBins, filter.animationWindow, setFilterAnimationTime]); // if filter is synced merge the filter and animation config

    var timeline = (0, _utils.getTimelineFromFilter)(filter);
    return /*#__PURE__*/_react["default"].createElement(AnimationController, {
      key: "filter-control",
      value: filter.value,
      domain: filter.domain,
      speed: filter.speed,
      isAnimating: filter.isAnimating,
      animationWindow: filter.animationWindow,
      steps: steps,
      updateAnimation: updateAnimation // @ts-expect-error different function type, goes to TimeWidget setFilterAnimationTime()
      ,
      setTimelineValue: setFilterAnimationTime,
      timeline: timeline,
      children: children
    });
  };

  return FilterAnimationController;
}

var _default = FilterAnimationControllerFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21wb25lbnRzL3NyYy9maWx0ZXItYW5pbWF0aW9uLWNvbnRyb2xsZXIudHN4Il0sIm5hbWVzIjpbIkZpbHRlckFuaW1hdGlvbkNvbnRyb2xsZXJGYWN0b3J5IiwiZGVwcyIsIkFuaW1hdGlvbkNvbnRyb2xsZXJGYWN0b3J5IiwiQW5pbWF0aW9uQ29udHJvbGxlciIsIkZpbHRlckFuaW1hdGlvbkNvbnRyb2xsZXIiLCJmaWx0ZXIiLCJmaWx0ZXJJZHgiLCJzZXRGaWx0ZXJBbmltYXRpb25UaW1lIiwiY2hpbGRyZW4iLCJpbnRlcnZhbEJpbnMiLCJzdGVwcyIsIm1hcCIsIngiLCJ4MCIsInVwZGF0ZUFuaW1hdGlvbiIsInZhbHVlIiwiYW5pbWF0aW9uV2luZG93IiwiQU5JTUFUSU9OX1dJTkRPVyIsImludGVydmFsIiwiaWR4IiwieDEiLCJ0aW1lbGluZSIsImRvbWFpbiIsInNwZWVkIiwiaXNBbmltYXRpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBUUFBLGdDQUFnQyxDQUFDQyxJQUFqQyxHQUF3QyxDQUFDQywrQkFBRCxDQUF4Qzs7QUFDQSxTQUFTRixnQ0FBVCxDQUNFRyxtQkFERixFQUVFO0FBQ0EsTUFBTUMseUJBQW1FLEdBQUcsU0FBdEVBLHlCQUFzRSxPQUt0RTtBQUFBLFFBSkpDLE1BSUksUUFKSkEsTUFJSTtBQUFBLFFBSEpDLFNBR0ksUUFISkEsU0FHSTtBQUFBLFFBRkpDLHNCQUVJLFFBRkpBLHNCQUVJO0FBQUEsUUFESkMsUUFDSSxRQURKQSxRQUNJO0FBQ0osUUFBTUMsWUFBWSxHQUFHLG9CQUFRO0FBQUEsYUFBTSw0QkFBZ0JKLE1BQWhCLENBQU47QUFBQSxLQUFSLEVBQXVDLENBQUNBLE1BQUQsQ0FBdkMsQ0FBckI7QUFFQSxRQUFNSyxLQUFLLEdBQUcsb0JBQVE7QUFBQSxhQUFPRCxZQUFZLEdBQUdBLFlBQVksQ0FBQ0UsR0FBYixDQUFpQixVQUFBQyxDQUFDO0FBQUEsZUFBSUEsQ0FBQyxDQUFDQyxFQUFOO0FBQUEsT0FBbEIsQ0FBSCxHQUFpQyxJQUFwRDtBQUFBLEtBQVIsRUFBbUUsQ0FDL0VKLFlBRCtFLENBQW5FLENBQWQ7QUFJQSxRQUFNSyxlQUFlLEdBQUcsd0JBQ3RCLFVBQUFDLEtBQUssRUFBSTtBQUNQLGNBQVFWLE1BQU0sQ0FBQ1csZUFBZjtBQUNFLGFBQUtDLDRCQUFpQkMsUUFBdEI7QUFDRSxjQUFNQyxJQUFHLEdBQUdKLEtBQUssQ0FBQyxDQUFELENBQWpCO0FBQ0FSLFVBQUFBLHNCQUFzQixDQUFDRCxTQUFELEVBQVksT0FBWixFQUFxQixDQUN6Q0csWUFBWSxDQUFDVSxJQUFELENBQVosQ0FBa0JOLEVBRHVCLEVBRXpDSixZQUFZLENBQUNVLElBQUQsQ0FBWixDQUFrQkMsRUFBbEIsR0FBdUIsQ0FGa0IsQ0FBckIsQ0FBdEI7QUFJQTs7QUFDRjtBQUNFYixVQUFBQSxzQkFBc0IsQ0FBQ0QsU0FBRCxFQUFZLE9BQVosRUFBcUJTLEtBQXJCLENBQXRCO0FBQ0E7QUFWSjtBQVlELEtBZHFCLEVBZXRCLENBQUNULFNBQUQsRUFBWUcsWUFBWixFQUEwQkosTUFBTSxDQUFDVyxlQUFqQyxFQUFrRFQsc0JBQWxELENBZnNCLENBQXhCLENBUEksQ0F5Qko7O0FBQ0EsUUFBTWMsUUFBUSxHQUFHLGtDQUFzQmhCLE1BQXRCLENBQWpCO0FBRUEsd0JBQ0UsZ0NBQUMsbUJBQUQ7QUFDRSxNQUFBLEdBQUcsRUFBQyxnQkFETjtBQUVFLE1BQUEsS0FBSyxFQUFFQSxNQUFNLENBQUNVLEtBRmhCO0FBR0UsTUFBQSxNQUFNLEVBQUVWLE1BQU0sQ0FBQ2lCLE1BSGpCO0FBSUUsTUFBQSxLQUFLLEVBQUVqQixNQUFNLENBQUNrQixLQUpoQjtBQUtFLE1BQUEsV0FBVyxFQUFFbEIsTUFBTSxDQUFDbUIsV0FMdEI7QUFNRSxNQUFBLGVBQWUsRUFBRW5CLE1BQU0sQ0FBQ1csZUFOMUI7QUFPRSxNQUFBLEtBQUssRUFBRU4sS0FQVDtBQVFFLE1BQUEsZUFBZSxFQUFFSSxlQVJuQixDQVNFO0FBVEY7QUFVRSxNQUFBLGdCQUFnQixFQUFFUCxzQkFWcEI7QUFXRSxNQUFBLFFBQVEsRUFBRWMsUUFYWjtBQVlFLE1BQUEsUUFBUSxFQUFFYjtBQVpaLE1BREY7QUFnQkQsR0FqREQ7O0FBa0RBLFNBQU9KLHlCQUFQO0FBQ0Q7O2VBRWNKLGdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7dXNlQ2FsbGJhY2ssIHVzZU1lbW99IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7Z2V0SW50ZXJ2YWxCaW5zLCBnZXRUaW1lbGluZUZyb21GaWx0ZXJ9IGZyb20gJ0BrZXBsZXIuZ2wvdXRpbHMnO1xuaW1wb3J0IHtUaW1lUmFuZ2VGaWx0ZXJ9IGZyb20gJ0BrZXBsZXIuZ2wvdHlwZXMnO1xuaW1wb3J0IHtBTklNQVRJT05fV0lORE9XfSBmcm9tICdAa2VwbGVyLmdsL2NvbnN0YW50cyc7XG5pbXBvcnQgQW5pbWF0aW9uQ29udHJvbGxlckZhY3RvcnkgZnJvbSAnLi9jb21tb24vYW5pbWF0aW9uLWNvbnRyb2wvYW5pbWF0aW9uLWNvbnRyb2xsZXInO1xuXG5pbnRlcmZhY2UgRmlsdGVyQW5pbWF0aW9uQ29udHJvbGxlclByb3BzIHtcbiAgZmlsdGVyOiBUaW1lUmFuZ2VGaWx0ZXIgJiB7YW5pbWF0aW9uV2luZG93Pzogc3RyaW5nfTtcbiAgZmlsdGVySWR4OiBudW1iZXI7XG4gIHNldEZpbHRlckFuaW1hdGlvblRpbWU6IChpZHg6IG51bWJlciwgdmFsdWU6IHN0cmluZywgYTogYW55W10pID0+IHZvaWQ7XG59XG5cbkZpbHRlckFuaW1hdGlvbkNvbnRyb2xsZXJGYWN0b3J5LmRlcHMgPSBbQW5pbWF0aW9uQ29udHJvbGxlckZhY3RvcnldO1xuZnVuY3Rpb24gRmlsdGVyQW5pbWF0aW9uQ29udHJvbGxlckZhY3RvcnkoXG4gIEFuaW1hdGlvbkNvbnRyb2xsZXI6IFJldHVyblR5cGU8dHlwZW9mIEFuaW1hdGlvbkNvbnRyb2xsZXJGYWN0b3J5PlxuKSB7XG4gIGNvbnN0IEZpbHRlckFuaW1hdGlvbkNvbnRyb2xsZXI6IFJlYWN0LkZDPEZpbHRlckFuaW1hdGlvbkNvbnRyb2xsZXJQcm9wcz4gPSAoe1xuICAgIGZpbHRlcixcbiAgICBmaWx0ZXJJZHgsXG4gICAgc2V0RmlsdGVyQW5pbWF0aW9uVGltZSxcbiAgICBjaGlsZHJlblxuICB9KSA9PiB7XG4gICAgY29uc3QgaW50ZXJ2YWxCaW5zID0gdXNlTWVtbygoKSA9PiBnZXRJbnRlcnZhbEJpbnMoZmlsdGVyKSwgW2ZpbHRlcl0pO1xuXG4gICAgY29uc3Qgc3RlcHMgPSB1c2VNZW1vKCgpID0+IChpbnRlcnZhbEJpbnMgPyBpbnRlcnZhbEJpbnMubWFwKHggPT4geC54MCkgOiBudWxsKSwgW1xuICAgICAgaW50ZXJ2YWxCaW5zXG4gICAgXSk7XG5cbiAgICBjb25zdCB1cGRhdGVBbmltYXRpb24gPSB1c2VDYWxsYmFjayhcbiAgICAgIHZhbHVlID0+IHtcbiAgICAgICAgc3dpdGNoIChmaWx0ZXIuYW5pbWF0aW9uV2luZG93KSB7XG4gICAgICAgICAgY2FzZSBBTklNQVRJT05fV0lORE9XLmludGVydmFsOlxuICAgICAgICAgICAgY29uc3QgaWR4ID0gdmFsdWVbMV07XG4gICAgICAgICAgICBzZXRGaWx0ZXJBbmltYXRpb25UaW1lKGZpbHRlcklkeCwgJ3ZhbHVlJywgW1xuICAgICAgICAgICAgICBpbnRlcnZhbEJpbnNbaWR4XS54MCxcbiAgICAgICAgICAgICAgaW50ZXJ2YWxCaW5zW2lkeF0ueDEgLSAxXG4gICAgICAgICAgICBdKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBzZXRGaWx0ZXJBbmltYXRpb25UaW1lKGZpbHRlcklkeCwgJ3ZhbHVlJywgdmFsdWUpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBbZmlsdGVySWR4LCBpbnRlcnZhbEJpbnMsIGZpbHRlci5hbmltYXRpb25XaW5kb3csIHNldEZpbHRlckFuaW1hdGlvblRpbWVdXG4gICAgKTtcblxuICAgIC8vIGlmIGZpbHRlciBpcyBzeW5jZWQgbWVyZ2UgdGhlIGZpbHRlciBhbmQgYW5pbWF0aW9uIGNvbmZpZ1xuICAgIGNvbnN0IHRpbWVsaW5lID0gZ2V0VGltZWxpbmVGcm9tRmlsdGVyKGZpbHRlcik7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPEFuaW1hdGlvbkNvbnRyb2xsZXJcbiAgICAgICAga2V5PVwiZmlsdGVyLWNvbnRyb2xcIlxuICAgICAgICB2YWx1ZT17ZmlsdGVyLnZhbHVlfVxuICAgICAgICBkb21haW49e2ZpbHRlci5kb21haW59XG4gICAgICAgIHNwZWVkPXtmaWx0ZXIuc3BlZWR9XG4gICAgICAgIGlzQW5pbWF0aW5nPXtmaWx0ZXIuaXNBbmltYXRpbmd9XG4gICAgICAgIGFuaW1hdGlvbldpbmRvdz17ZmlsdGVyLmFuaW1hdGlvbldpbmRvd31cbiAgICAgICAgc3RlcHM9e3N0ZXBzfVxuICAgICAgICB1cGRhdGVBbmltYXRpb249e3VwZGF0ZUFuaW1hdGlvbn1cbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBkaWZmZXJlbnQgZnVuY3Rpb24gdHlwZSwgZ29lcyB0byBUaW1lV2lkZ2V0IHNldEZpbHRlckFuaW1hdGlvblRpbWUoKVxuICAgICAgICBzZXRUaW1lbGluZVZhbHVlPXtzZXRGaWx0ZXJBbmltYXRpb25UaW1lfVxuICAgICAgICB0aW1lbGluZT17dGltZWxpbmV9XG4gICAgICAgIGNoaWxkcmVuPXtjaGlsZHJlbn1cbiAgICAgIC8+XG4gICAgKTtcbiAgfTtcbiAgcmV0dXJuIEZpbHRlckFuaW1hdGlvbkNvbnRyb2xsZXI7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEZpbHRlckFuaW1hdGlvbkNvbnRyb2xsZXJGYWN0b3J5O1xuIl19