"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactIntl = require("react-intl");

var _interactionPanel = _interopRequireDefault(require("./interaction-panel/interaction-panel"));

var _panelTitle = _interopRequireDefault(require("./panel-title"));

// Copyright (c) 2023 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
InteractionManagerFactory.deps = [_interactionPanel["default"], _panelTitle["default"]];

function InteractionManagerFactory(InteractionPanel, PanelTitle) {
  var InteractionManager = function InteractionManager(_ref) {
    var interactionConfig = _ref.interactionConfig,
        datasets = _ref.datasets,
        visStateActions = _ref.visStateActions,
        panelMetadata = _ref.panelMetadata;
    var onConfigChange = visStateActions.interactionConfigChange,
        setColumnDisplayFormat = visStateActions.setColumnDisplayFormat;
    var intl = (0, _reactIntl.useIntl)();
    return /*#__PURE__*/_react["default"].createElement("div", {
      className: "interaction-manager"
    }, /*#__PURE__*/_react["default"].createElement(PanelTitle, {
      className: "interaction-manager-title",
      title: intl.formatMessage({
        id: panelMetadata.label
      })
    }), Object.keys(interactionConfig).map(function (key) {
      return /*#__PURE__*/_react["default"].createElement(InteractionPanel, {
        datasets: datasets,
        config: interactionConfig[key],
        key: key,
        onConfigChange: onConfigChange,
        setColumnDisplayFormat: setColumnDisplayFormat
      });
    }));
  };

  return InteractionManager;
}

var _default = InteractionManagerFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3NyYy9zaWRlLXBhbmVsL2ludGVyYWN0aW9uLW1hbmFnZXIudHN4Il0sIm5hbWVzIjpbIkludGVyYWN0aW9uTWFuYWdlckZhY3RvcnkiLCJkZXBzIiwiSW50ZXJhY3Rpb25QYW5lbEZhY3RvcnkiLCJQYW5lbFRpdGxlRmFjdG9yeSIsIkludGVyYWN0aW9uUGFuZWwiLCJQYW5lbFRpdGxlIiwiSW50ZXJhY3Rpb25NYW5hZ2VyIiwiaW50ZXJhY3Rpb25Db25maWciLCJkYXRhc2V0cyIsInZpc1N0YXRlQWN0aW9ucyIsInBhbmVsTWV0YWRhdGEiLCJvbkNvbmZpZ0NoYW5nZSIsImludGVyYWN0aW9uQ29uZmlnQ2hhbmdlIiwic2V0Q29sdW1uRGlzcGxheUZvcm1hdCIsImludGwiLCJmb3JtYXRNZXNzYWdlIiwiaWQiLCJsYWJlbCIsIk9iamVjdCIsImtleXMiLCJtYXAiLCJrZXkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQW9CQTs7QUFDQTs7QUFNQTs7QUFDQTs7QUE1QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFxQkFBLHlCQUF5QixDQUFDQyxJQUExQixHQUFpQyxDQUFDQyw0QkFBRCxFQUEwQkMsc0JBQTFCLENBQWpDOztBQUVBLFNBQVNILHlCQUFULENBQ0VJLGdCQURGLEVBRUVDLFVBRkYsRUFHRTtBQUNBLE1BQU1DLGtCQUFxRCxHQUFHLFNBQXhEQSxrQkFBd0QsT0FLeEQ7QUFBQSxRQUpKQyxpQkFJSSxRQUpKQSxpQkFJSTtBQUFBLFFBSEpDLFFBR0ksUUFISkEsUUFHSTtBQUFBLFFBRkpDLGVBRUksUUFGSkEsZUFFSTtBQUFBLFFBREpDLGFBQ0ksUUFESkEsYUFDSTtBQUFBLFFBQzRCQyxjQUQ1QixHQUNzRUYsZUFEdEUsQ0FDR0csdUJBREg7QUFBQSxRQUM0Q0Msc0JBRDVDLEdBQ3NFSixlQUR0RSxDQUM0Q0ksc0JBRDVDO0FBRUosUUFBTUMsSUFBSSxHQUFHLHlCQUFiO0FBQ0Esd0JBQ0U7QUFBSyxNQUFBLFNBQVMsRUFBQztBQUFmLG9CQUNFLGdDQUFDLFVBQUQ7QUFDRSxNQUFBLFNBQVMsRUFBQywyQkFEWjtBQUVFLE1BQUEsS0FBSyxFQUFFQSxJQUFJLENBQUNDLGFBQUwsQ0FBbUI7QUFBQ0MsUUFBQUEsRUFBRSxFQUFFTixhQUFhLENBQUNPO0FBQW5CLE9BQW5CO0FBRlQsTUFERixFQUtHQyxNQUFNLENBQUNDLElBQVAsQ0FBWVosaUJBQVosRUFBK0JhLEdBQS9CLENBQW1DLFVBQUFDLEdBQUc7QUFBQSwwQkFDckMsZ0NBQUMsZ0JBQUQ7QUFDRSxRQUFBLFFBQVEsRUFBRWIsUUFEWjtBQUVFLFFBQUEsTUFBTSxFQUFFRCxpQkFBaUIsQ0FBQ2MsR0FBRCxDQUYzQjtBQUdFLFFBQUEsR0FBRyxFQUFFQSxHQUhQO0FBSUUsUUFBQSxjQUFjLEVBQUVWLGNBSmxCO0FBS0UsUUFBQSxzQkFBc0IsRUFBRUU7QUFMMUIsUUFEcUM7QUFBQSxLQUF0QyxDQUxILENBREY7QUFpQkQsR0F6QkQ7O0FBMkJBLFNBQU9QLGtCQUFQO0FBQ0Q7O2VBRWNOLHlCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDIzIFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7dXNlSW50bH0gZnJvbSAncmVhY3QtaW50bCc7XG5cbmltcG9ydCB7SW50ZXJhY3Rpb25Db25maWd9IGZyb20gJ0BrZXBsZXIuZ2wvdHlwZXMnO1xuaW1wb3J0IHtWaXNTdGF0ZUFjdGlvbnN9IGZyb20gJ0BrZXBsZXIuZ2wvYWN0aW9ucyc7XG5pbXBvcnQge0RhdGFzZXRzfSBmcm9tICdAa2VwbGVyLmdsL3RhYmxlJztcblxuaW1wb3J0IEludGVyYWN0aW9uUGFuZWxGYWN0b3J5IGZyb20gJy4vaW50ZXJhY3Rpb24tcGFuZWwvaW50ZXJhY3Rpb24tcGFuZWwnO1xuaW1wb3J0IFBhbmVsVGl0bGVGYWN0b3J5IGZyb20gJy4vcGFuZWwtdGl0bGUnO1xuXG5pbXBvcnQge1BhbmVsTWV0YX0gZnJvbSAnLi9jb21tb24vdHlwZXMnO1xuXG50eXBlIEludGVyYWN0aW9uTWFuYWdlclByb3BzID0ge1xuICBpbnRlcmFjdGlvbkNvbmZpZzogSW50ZXJhY3Rpb25Db25maWc7XG4gIGRhdGFzZXRzOiBEYXRhc2V0cztcbiAgdmlzU3RhdGVBY3Rpb25zOiB0eXBlb2YgVmlzU3RhdGVBY3Rpb25zO1xuICBwYW5lbE1ldGFkYXRhOiBQYW5lbE1ldGE7XG59O1xuXG5JbnRlcmFjdGlvbk1hbmFnZXJGYWN0b3J5LmRlcHMgPSBbSW50ZXJhY3Rpb25QYW5lbEZhY3RvcnksIFBhbmVsVGl0bGVGYWN0b3J5XTtcblxuZnVuY3Rpb24gSW50ZXJhY3Rpb25NYW5hZ2VyRmFjdG9yeShcbiAgSW50ZXJhY3Rpb25QYW5lbDogUmV0dXJuVHlwZTx0eXBlb2YgSW50ZXJhY3Rpb25QYW5lbEZhY3Rvcnk+LFxuICBQYW5lbFRpdGxlOiBSZXR1cm5UeXBlPHR5cGVvZiBQYW5lbFRpdGxlRmFjdG9yeT5cbikge1xuICBjb25zdCBJbnRlcmFjdGlvbk1hbmFnZXI6IFJlYWN0LkZDPEludGVyYWN0aW9uTWFuYWdlclByb3BzPiA9ICh7XG4gICAgaW50ZXJhY3Rpb25Db25maWcsXG4gICAgZGF0YXNldHMsXG4gICAgdmlzU3RhdGVBY3Rpb25zLFxuICAgIHBhbmVsTWV0YWRhdGFcbiAgfSkgPT4ge1xuICAgIGNvbnN0IHtpbnRlcmFjdGlvbkNvbmZpZ0NoYW5nZTogb25Db25maWdDaGFuZ2UsIHNldENvbHVtbkRpc3BsYXlGb3JtYXR9ID0gdmlzU3RhdGVBY3Rpb25zO1xuICAgIGNvbnN0IGludGwgPSB1c2VJbnRsKCk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW50ZXJhY3Rpb24tbWFuYWdlclwiPlxuICAgICAgICA8UGFuZWxUaXRsZVxuICAgICAgICAgIGNsYXNzTmFtZT1cImludGVyYWN0aW9uLW1hbmFnZXItdGl0bGVcIlxuICAgICAgICAgIHRpdGxlPXtpbnRsLmZvcm1hdE1lc3NhZ2Uoe2lkOiBwYW5lbE1ldGFkYXRhLmxhYmVsfSl9XG4gICAgICAgIC8+XG4gICAgICAgIHtPYmplY3Qua2V5cyhpbnRlcmFjdGlvbkNvbmZpZykubWFwKGtleSA9PiAoXG4gICAgICAgICAgPEludGVyYWN0aW9uUGFuZWxcbiAgICAgICAgICAgIGRhdGFzZXRzPXtkYXRhc2V0c31cbiAgICAgICAgICAgIGNvbmZpZz17aW50ZXJhY3Rpb25Db25maWdba2V5XX1cbiAgICAgICAgICAgIGtleT17a2V5fVxuICAgICAgICAgICAgb25Db25maWdDaGFuZ2U9e29uQ29uZmlnQ2hhbmdlfVxuICAgICAgICAgICAgc2V0Q29sdW1uRGlzcGxheUZvcm1hdD17c2V0Q29sdW1uRGlzcGxheUZvcm1hdH1cbiAgICAgICAgICAvPlxuICAgICAgICApKX1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH07XG5cbiAgcmV0dXJuIEludGVyYWN0aW9uTWFuYWdlcjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgSW50ZXJhY3Rpb25NYW5hZ2VyRmFjdG9yeTtcbiJdfQ==